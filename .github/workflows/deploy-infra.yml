name: Deploy Infrastructure

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to ${{ github.ref_name }}
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      ORG_OR_USER: ${{ vars.ORG_OR_USER }}
      REPO: ${{ vars.REPO }}
      ALLOWED_ACTIONS: ${{ vars.ALLOWED_ACTIONS }}
      ALLOWED_RESOURCES: ${{ vars.ALLOWED_RESOURCES }}
      ENVIRONMENT: ${{ github.ref_name }}
      ACTIONS_ROLE_ARN: ${{ secrets.ACTIONS_ROLE_ARN }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ACTIONS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.3

      - name: Initialize Terraform
        run: |
          terraform init

      - name: Select Workspace
        run: |
          terraform workspace select ${{ env.ENVIRONMENT }} || terraform workspace new ${{ env.ENVIRONMENT }}

      - name: Terraform Plan
        run: |
          terraform plan \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="org_or_user=${{ env.ORG_OR_USER }}" \
            -var="repo=${{ env.REPO }}" \
            -var="allowed_actions=${{ env.ALLOWED_ACTIONS }}" \
            -var="allowed_resources=${{ env.ALLOWED_RESOURCES }}" \
            -var="environment=${{ env.ENVIRONMENT }}"

      - name: Terraform Apply (Dev Only)
        if: github.ref_name == 'dev'
        run: |
          terraform apply -auto-approve \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="org_or_user=${{ env.ORG_OR_USER }}" \
            -var="repo=${{ env.REPO }}" \
            -var="allowed_actions=${{ env.ALLOWED_ACTIONS }}" \
            -var="allowed_resources=${{ env.ALLOWED_RESOURCES }}" \
            -var="environment=${{ env.ENVIRONMENT }}"

  prod-approval:
    name: Approval for Prod Deployment
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref_name == 'main'

    steps:
      - name: Request Approval
        uses: hmarr/auto-approve-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Apply Changes to Prod
        if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' }}
        run: |
          terraform workspace select prod || terraform workspace new prod
          terraform apply -auto-approve \
            -var="aws_region=${{ env.AWS_REGION }}" \
            -var="org_or_user=${{ env.ORG_OR_USER }}" \
            -var="repo=${{ env.REPO }}" \
            -var="allowed_actions=${{ env.ALLOWED_ACTIONS }}" \
            -var="allowed_resources=${{ env.ALLOWED_RESOURCES }}" \
            -var="environment=prod"
